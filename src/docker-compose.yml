services:

  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    volumes:
      - ./backend/app:/app
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend.rule=Host(`hudhud.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/public`))
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend.tls=true
      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=8081
    networks:
      - traefik-public

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    labels:
      - traefik.enable=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend.rule=Host(`hudhud.${DOMAIN}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=PathPrefix(`/`)
      - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=5002
    networks:
      - traefik-public

  db:
    image: pgvector/pgvector:pg17
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data
      - ./backend/pg_entrypoint.sh:/docker-entrypoint-initdb.d/pg_entrypoint.sh
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - traefik-public

volumes:
  app-db-data:

networks:
  traefik-public:
    external: ${TRAEFIK_PUBLIC_NETWORK_IS_EXTERNAL-true}